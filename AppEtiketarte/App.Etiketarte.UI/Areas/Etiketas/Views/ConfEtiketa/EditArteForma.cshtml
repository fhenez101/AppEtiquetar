@model App.Etiketarte.UI.Areas.Etiketas.Models.ViewModels.VmArteForma

@section styles {
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Style/Etiketas/previsualizacion.css")" />
    <link href="@Url.Content("~/Content/bootstrap-slider.min.css")" rel="stylesheet" />
    <style>
        .slider.slider-horizontal {
            margin-left: 15px;
        }

        .containerImage .fatherDiv div img {
            max-width: 50px;
            max-height: 50px;
        }

        /*
            ESTAS LINEAS CSS QUE COMENTÉ HACEN QUE LA POSICION DEL TEXTO Y DEL DIV DRAGGABLE SE
            PIERDAN EN ESTA VISTA. PORFA VALORAR SOLUCION.
        */

        /*.parent .containerImage .fatherDiv div img {
            max-width: 45px;
            max-height: 45px;
        }

        .prev .containerImage .fatherDiv div img {
            max-width: 45px;
            max-height: 45px;
        }*/
    </style>
}

<section id="app_arteForma" class="main-container col1-layout">
    <div class="main container">
        <div class="page-title">
            <h1>Configurar Etiqueta</h1>
        </div>
        <div class="box">
            @using (Html.BeginForm("EditArteForma", "ConfEtiketa", new { area = "Etiketas" }, FormMethod.Post, new { enctype = "multipart/form-data", autocomplete = "off" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-group form-theme">
                    <h3>Elegir Forma</h3>
                    <div class="row">
                        @foreach (var item in Model.Forma)
                        {
                            string check = (Model.IdForma == item.IdForma) ? "checked=\"checked\"" : string.Empty;

                            <div class="col-md-4 forma">
                                @Html.ShowImage(item.Path, item.FormaSplits.ToArray())
                                <input type="radio" name="IdForma" class="form-check-input" @check value="@item.IdForma" />
                            </div>
                        }
                    </div>
                </div>
                <div class="form-group form-theme arteforma-detail">
                    <h3>Arte</h3>
                    <div class="show-arte img-container">
                        @Html.ShowImage(Model.ArtePath, Model.ArteSplit.ToArray())
                    </div>
                </div>
                <div class="form-group form-theme">
                    <div class="upload-arte">
                        <h3>Editar Arte</h3>
                        @Html.CreateImage()
                    </div>
                    <div class="form-group form-theme">
                        @Html.LabelFor(model => model.Codigo)
                        @Html.EditorFor(model => model.Codigo, new { htmlAttributes = new { @class = "form-control upper-case" } })
                    </div>
                    <div class="form-group form-theme">
                        @Html.LabelFor(model => model.Nombre)
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group form-theme">
                    <h3>Seleccionar fuentes</h3>
                    <div class="tipografia">
                        @foreach (var item in Model.Tipografias)
                        {
                            string check = (Model.IdTipografiaEdit.Contains(item.IdTipoGrafia)) ? "checked=\"checked\"" : string.Empty;

                            <div class="form-check form-check-inline">
                                <label class="form-check-label font-@item.Nombre.ToLower()">
                                    <input type="checkbox" name="IdTipografia[]" class="form-check-input" @check value="@item.IdTipoGrafia"> @item.Nombre
                                </label>
                            </div>
                        }
                    </div>
                </div>
                <div class="form-group form-theme">
                    <h3>Seleccionar colores</h3>
                    <div class="color-palette">
                        @foreach (var item in Model.Colors)
                        {
                            string check = (Model.IdColorEdit.Contains(item.IdColor)) ? "checked=\"checked\"" : string.Empty;

                            <label style="background-color: @item.Hexadecimal" title="@item.Nombre">
                                <input type="checkbox" name="IdColor[]" @check value="@item.IdColor" />
                            </label>
                        }
                    </div>
                </div>
                <h3>Establecer posición del texto</h3>
                <div class="form-group form-theme">
                    <label for="maxCharPerLine">Número de caracteres por línea</label>
                    <input type="number" id="maxCharPerLine" class="form-control" name="CaracteresLinea" />
                </div>
                <div class="form-group form-theme">
                    <label>Numero de lineas</label>
                    <input type="number" id="lineNumbers" class="form-control" name="NumeroLineas" />
                </div>
                <div class="form-inline">
                    <h3>Seleccione el rango de tamaño de letra</h3>
                    <div class="form-group form-theme">
                        <label>Tamaño minimo</label>
                        <select name="FontMinSize" id="minSizeFont" class="input form-control">
                            <option value="16">16px</option>
                            <option value="20">20px</option>
                            <option value="24">24px</option>
                        </select>
                    </div>
                    <div class="form-group form-theme">
                        <label>Tamaño maximo</label>
                        <select name="FontMaxSize" id="maxSizeFont" class="input form-control">
                            <option value="18">18px</option>
                            <option value="24">24px</option>
                            <option value="36">36px</option>
                        </select>
                    </div>
                </div>
                <div class="row arte-preview">
                    <div class="col-md-6 text-settings">
                        <div class="parent">
                            <div class="parent-left"></div>
                            <div class="length" id="draggable">
                                <span id="draggableLength" class="length-hide"></span>
                            </div>
                        </div>
                        <div class="text-actions">

                            <select id="fontSizes"></select>

                            <button type="button" id="btnAlignLeft" class="align-button" title="Alinear a la izquierda">
                                <i class="fa fa-align-left fa-lg" aria-hidden="true"></i>
                            </button>
                            <button type="button" id="btnAlignCenter" class="align-button" title="Alinear al centro">
                                <i class="fa fa-align-center fa-lg" aria-hidden="true"></i>
                            </button>
                            <button type="button" id="btnAlignRight" class="align-button" title="Alinear a la derecha">
                                <i class="fa fa-align-right fa-lg" aria-hidden="true"></i>
                            </button>
                            <button type="button" id="setPosition" class="align-button button-accept" title="Aceptar">
                                <i class="fa fa-check fa-lg" aria-hidden="true"></i>
                            </button>
                        </div>
                    </div>
                    <div class="col-md-6 text-preview">
                        <div class="prev">
                            <div class="prev-rigt"></div>
                            <div class="text-container">
                                <p id="demoText" class="text"></p>
                            </div>
                        </div>
                    </div>
                </div>
                <div>
                    <input type="hidden" id="textTop" name="TextTop" value="@Model.TextTop" />
                    <input type="hidden" id="textLeft" name="TextLeft" value="@Model.TextLeft" />
                    <input type="hidden" id="textAlign" name="TextAlign" value="@Model.TextAlign" />
                    <input type="hidden" id="containerWidth" name="ContainerWidth" value="@Model.ContainerWidth" />
                    <input type="hidden" name="IdArteForma" value="@Model.IdArteForma" />
                    <input type="hidden" name="IdConfEtiketa" value="@Model.IdConfEtiketa" />
                    <input type="hidden" name="IdArte" value="@Model.IdArte" />
                </div>
                <div class="form-group form-theme">
                    <div class="form-actions">
                        @Html.BtnModify()
                        @Html.BackAction("Arteforma", new { id = Model.IdConfEtiketa })
                    </div>
                </div>
            }
        </div>
    </div>
</section>

@section scripts{
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="~/Scripts/bootstrap-slider.min.js"></script>
    <script>
        var data = {
            LineCharacters: '@Model.CaracteresLinea',
            NumberOfLines: '@Model.NumeroLineas',
            fontSizeMin: '@Model.FontMinSize',
            fontSizeMax: '@Model.FontMaxSize',
        }

        $(document).ready(function () {
            init();
        });

        $('#maxCharPerLine').change(function () {
            data.LineCharacters = $(this).val();
            fillDraggable();
        })

        $('#lineNumbers').change(function () {
            data.NumberOfLines = $(this).val();
            fillDraggable();
        });

        $('#minSizeFont').change(function () {
            data.fontSizeMin = $(this).val();
            setSizesCollection();
        });

        $('#maxSizeFont').change(function () {
            data.fontSizeMax = $(this).val();
            setSizesCollection();
        });

        $('#fontSizes').change(function () {
            data.fontSize = $(this).val();
            setFontSize();
        });

        function init() {
            $('#maxCharPerLine').val(data.LineCharacters);
            $('#lineNumbers').val(data.NumberOfLines);
            $('#minSizeFont').val(data.fontSizeMin);
            $('#maxSizeFont').val(data.fontSizeMax);
            fillDraggable();
            setSizesCollection();
        }

        function fillDraggable() {
            var el = document.getElementById('draggableLength');

            el.innerText = "";

            if (data.NumberOfLines > 1) {
                for (var i = 0; i < data.NumberOfLines; i++) {

                    for (var j = 0; j < data.LineCharacters; j++) {
                        el.innerText += 'M';
                    }

                    el.innerHTML += '<br>';
                }
            }
            else {
                for (var i = 0; i < data.LineCharacters; i++) {
                    el.innerText += 'M';
                }
            }
        }

        function setSizesCollection() {
            $('.font-size-option').remove();

            if (data.fontSizeMin != '' && data.fontSizeMax != '') {
                data.sizesCollection = fillSizesCollection();
                $.each(data.sizesCollection, function (index, value) {
                    $('#fontSizes').append('<option class="font-size-option">' + value + 'px' + '</option>');
                });
            }
        }

        function fillSizesCollection() {
            var sizes = new Array();

            if (data.fontSizeMin != '' && data.fontSizeMax != '') {
                for (var i = parseInt(data.fontSizeMin) ; i <= parseInt(data.fontSizeMax) ; i++) {
                    sizes.push(i);
                }
            }

            return sizes;
        }

        function setFontSize() {
            $('#demoText, #draggableLength').css('font-size', data.fontSize);
        }

        //Da el margen de manera dinámica al contenedor de la imagen
        var formaArteHeight = $('.img-container').height();

        setHeightDinamycally('arteforma-detail', formaArteHeight);

        function setHeightDinamycally(element, height) {
            $('.' + element).css('margin-bottom', height + 30);
        }

    </script>
    <!-- Llamada a las funciones Draggable del texto-->
    <script src="~/Scripts/Etiketas/text-position.js"></script>
    <!-- Código jQuery -->
    <script>
        $(document).ready(function () {
            // Muestra el arte traido de DB
            $('.parent .parent-left, .prev .prev-rigt').html($('.show-arte').clone());

            $(document).on('change', '.btn-file :file', function () {
                var input = $(this);
                var label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
                input.trigger('fileselect', [label]);
            });

            $('.btn-file :file').on('fileselect', function (event, label) {
                var input = $(this).parents('.input-group').find(':text');
                var log = label;

                if (input.length) {
                    input.val(log);
                }
                else {
                    if (log) {
                        console.log(log);
                    }
                }
            });

            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('#img-upload').attr('src', e.target.result);
                        $('.prev .prev-rigt, .parent .parent-left').html($('#img-upload').clone());
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }

            $('#imgInp').change(function () {
                readURL(this);
            });

            // Muestra el elemento draggable y el texto en el lugar correspondiente
            showPosition($('#textTop').val(), $('#textLeft').val(), $('#textAlign').val());
        });
    </script>
}